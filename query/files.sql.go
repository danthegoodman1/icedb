// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: files.sql

package query

import (
	"context"
)

const getAllEnabledFiles = `-- name: GetAllEnabledFiles :many
SELECT path
FROM files
WHERE namespace = $1
AND enabled = true
`

func (q *Queries) GetAllEnabledFiles(ctx context.Context, namespace string) ([]string, error) {
	rows, err := q.db.Query(ctx, getAllEnabledFiles, namespace)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var path string
		if err := rows.Scan(&path); err != nil {
			return nil, err
		}
		items = append(items, path)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const insertFile = `-- name: InsertFile :exec
INSERT INTO files (
    namespace,
    enabled,
    path,
    bytes,
    rows,
    columns
) VALUES (
    $1,
    $2,
    $3,
    $4,
    $5,
    $6
)
`

type InsertFileParams struct {
	Namespace string
	Enabled   bool
	Path      string
	Bytes     int64
	Rows      int64
	Columns   []string
}

func (q *Queries) InsertFile(ctx context.Context, arg InsertFileParams) error {
	_, err := q.db.Exec(ctx, insertFile,
		arg.Namespace,
		arg.Enabled,
		arg.Path,
		arg.Bytes,
		arg.Rows,
		arg.Columns,
	)
	return err
}
